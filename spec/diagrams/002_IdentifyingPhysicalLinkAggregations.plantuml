@startuml 002_IdentifyingPhysicalLinkAggregations
skinparam responseMessageBelowArrow true

title
RequestForProvidingHistoricalPmDataCausesIdentifyingPhysicalLinkAggregations
end title

participant "LinkVis" as LinkVis
participant "MWPP://v1/provide-historical-pm-data-of-device" as MWPP
participant "<i>RequestForProvidingHistoricalPmDataCausesReadingLtpStructure</i>" as LTPs
participant "MWDI://core-model-1-4:network-control-domain=cache/control-construct={mountName}/logical-termination-point={uuid}/\nltp-augment-1-0:ltp-augment-pac?fields=(original-ltp-name;external-label)" as LtpDesignation

LinkVis -> MWPP: [{MountName, timeStamp}] (apiKeyAuth)
activate MWPP

LTPs --> MWPP: {Uuid, LocalId, LayerProtocolName}

note over MWPP

For all uuids with layerProtocolName == AIR_LAYER

ClientStructureUuid = LtpUnderTest.ClientLtp
ClientContainerUuid = ClientStructure.ClientLtp
ServingStructureUuidList = ClientContainer.ServerLtp
List(ServingPhysicUuid) = List(ServingStructure.ServerLtp)
end note

note over MWPP
From the following request,

For all ServingPhysic.LayerProtocol.LayerProtocolName == WIRE_LAYER :
interface-name = originalLtpName 

For all ServingPhysic.LayerProtocol.LayerProtocolName == AIR_LAYER :
link-id = externalLabel.substring(0,9)

end note


MWPP -> LtpDesignation: (apiKeyAuth)
LtpDesignation --> MWPP: {originalLtpName, externalLabel}

deactivate MWPP

@enduml